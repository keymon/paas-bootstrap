# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.require_version ">= 1.8.0"

# We use bootstrap concourse SG and a subnet in default VPC in each region
AWS_ACCOUNT = ENV.fetch("AWS_ACCOUNT", "dev")
AWS_ACCOUNT_DATA = {
  "dev" => {
    subnet_id: "subnet-56a69a33",
    security_group: "sg-63323c05",
  },
  "ci" => {
    subnet_id: "subnet-0ebfab6b",
    security_group: "sg-0bcac46d",
  },
  "staging" => {
    subnet_id: "subnet-dd7776b8",
    security_group: "sg-a9cac4cf",
  },
  "prod" => {
    subnet_id: "subnet-a56297c1",
    security_group: "sg-10cbc576",
  },
  "sandbox" => {
    subnet_id: "subnet-b7c527d0",
    security_group: "sg-9bfa58e2",
  }
}.freeze
AWS_ACCOUNT_VARIABLES = AWS_ACCOUNT_DATA.fetch(AWS_ACCOUNT)

Vagrant.configure(2) do |config|
  config.vm.box = ENV['VAGRANT_BOX_NAME'] || 'aws_vagrant_box'

  Dir.glob("./post-deploy.d/*").sort.each do |post_deploy_file|
    config.vm.provision "shell" do |s|
      s.privileged = true
      s.env = ENV.select { |key|
        %w(CONCOURSE_ATC_PASSWORD CONCOURSE_ATC_USER CONCOURSE_DATABASE_NAME CONCOURSE_URL BRANCH DEPLOY_ENV).include? key
      }
      s.name = post_deploy_file
      s.path = post_deploy_file
    end
  end

  config.vm.provider :aws do |aws, override|
    aws.access_key_id = ENV['AWS_ACCESS_KEY_ID']
    aws.secret_access_key = ENV['AWS_SECRET_ACCESS_KEY']
    aws.session_token = ENV['AWS_SESSION_TOKEN']
    aws.associate_public_ip = true
    aws.tags = { 'Name' => (ENV['DEPLOY_ENV'] || ENV['USER']) + " concourse" }
    aws.keypair_name = ENV['VAGRANT_SSH_KEY_NAME']

    aws.block_device_mapping = [{ 'DeviceName' => '/dev/sda1', 'Ebs.VolumeSize' => 50 }]

    # Ubuntu 16.04
    aws.ami = 'ami-98ecb7fe'
    aws.region = 'eu-west-1'

    # Only HVM instances with ephemeral disks can be used
    aws.instance_type = 'm4.large'

    aws.subnet_id = AWS_ACCOUNT_VARIABLES.fetch(:subnet_id)
    aws.security_groups = [AWS_ACCOUNT_VARIABLES.fetch(:security_group)]

    # Add IAM role to allow access to necessary AWS APIs
    aws.iam_instance_profile_name = 'concourse-lite'

    # We will rely on vagrant generating a ssh key, but this must be the ubuntu user, as the vagrant user does not exist on the vm
    override.ssh.username = "ubuntu"
    override.ssh.private_key_path = ENV['VAGRANT_SSH_KEY']

    # Fix issue on osx: https://github.com/mitchellh/vagrant/issues/5401#issuecomment-115240904
    override.nfs.functional = false
  end
end
